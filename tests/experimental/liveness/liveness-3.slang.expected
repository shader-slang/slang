result code = 0
standard error = {
}
standard output = {
#version 450
#extension GL_EXT_spirv_intrinsics : require
layout(row_major) uniform;
layout(row_major) buffer;
spirv_instruction(id = 256)
void livenessStart_0(spirv_by_reference int  _0[2], spirv_literal int _1);

spirv_instruction(id = 256)
void livenessStart_1(spirv_by_reference int _0, spirv_literal int _1);

spirv_instruction(id = 256)
void livenessStart_2(spirv_by_reference int  _0[3], spirv_literal int _1);

spirv_instruction(id = 257)
void livenessEnd_0(spirv_by_reference int _0, spirv_literal int _1);

spirv_instruction(id = 257)
void livenessEnd_1(spirv_by_reference int  _0[3], spirv_literal int _1);

spirv_instruction(id = 257)
void livenessEnd_2(spirv_by_reference int  _0[2], spirv_literal int _1);

int calcThing_0(int offset_0)
{
    int  another_0[2];
    livenessStart_0(another_0, 0);
    another_0[0] = 1;
    another_0[1] = 2;
    int k_0;
    livenessStart_1(k_0, 0);
    k_0 = 0;
    int _S1;
    livenessStart_1(_S1, 0);
    _S1 = offset_0;
    int total_0;
    livenessStart_1(total_0, 0);
    total_0 = 0;
    for(;;)
    {
        if(k_0 < 20)
        {
        }
        else
        {
            break;
        }
        int  idx_0[3];
        livenessStart_2(idx_0, 0);
        idx_0[0] = 0;
        idx_0[1] = 0;
        idx_0[2] = 0;
        int i_0;
        livenessStart_1(i_0, 0);
        i_0 = 0;
        int _S2;
        livenessStart_1(_S2, 0);
        _S2 = _S1;
        for(;;)
        {
            if(i_0 < 17)
            {
            }
            else
            {
                break;
            }
            int modRange_0 = i_0 % 3;
            another_0[i_0 & 1] = another_0[i_0 & 1] + modRange_0;
            int _S3 = i_0 % 3;
            int _S4;
            if(_S3 != 0)
            {
                int _S5 = _S2;
                livenessEnd_0(_S2, 0);
                int _S6 = _S5 + 1;
                livenessStart_1(_S4, 0);
                _S4 = _S6;
            }
            else
            {
                int _S7 = _S2;
                livenessEnd_0(_S2, 0);
                livenessStart_1(_S4, 0);
                _S4 = _S7;
            }
            idx_0[modRange_0] = idx_0[modRange_0] + (_S4 + i_0);
            i_0 = i_0 + 1;
            livenessStart_1(_S2, 0);
            int _S8 = _S4;
            livenessEnd_0(_S4, 0);
            _S2 = _S8;
        }
        livenessEnd_0(i_0, 0);
        livenessEnd_0(_S1, 0);
        int _S9 = (k_0 + 7) % 5;
        if(_S9 == 4)
        {
            livenessEnd_0(_S2, 0);
            livenessEnd_1(idx_0, 0);
            livenessEnd_0(k_0, 0);
            livenessEnd_2(another_0, 0);
            return total_0;
        }
        int _S10 = idx_0[0] + idx_0[1];
        int _S11 = idx_0[2];
        livenessEnd_1(idx_0, 0);
        int _S12 = _S10 + _S11;
        int _S13 = total_0;
        livenessEnd_0(total_0, 0);
        int total_1 = _S13 + _S12;
        k_0 = k_0 + 1;
        livenessStart_1(_S1, 0);
        int _S14 = _S2;
        livenessEnd_0(_S2, 0);
        _S1 = _S14;
        livenessStart_1(total_0, 0);
        total_0 = total_1;
    }
    livenessEnd_0(_S1, 0);
    livenessEnd_0(k_0, 0);
    livenessEnd_2(another_0, 0);
    int _S15 = total_0;
    livenessEnd_0(total_0, 0);
    return - _S15;
}

layout(std430, binding = 0) buffer _S16 {
    int _data[];
} outputBuffer_0;
layout(local_size_x = 4, local_size_y = 1, local_size_z = 1) in;
void main()
{
    int index_0 = int(gl_GlobalInvocationID.x);
    uint _S17 = uint(index_0);
    int _S18 = calcThing_0(index_0);
    ((outputBuffer_0)._data[(_S17)]) = _S18;
    return;
}

}
