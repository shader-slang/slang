result code = 0
standard error = {
}
standard output = {
#version 450
#extension GL_EXT_spirv_intrinsics : require
layout(row_major) uniform;
layout(row_major) buffer;
spirv_instruction(id = 256)
void livenessStart_0(spirv_by_reference uint _0, spirv_literal int _1);

spirv_instruction(id = 256)
void livenessStart_1(spirv_by_reference int _0, spirv_literal int _1);

spirv_instruction(id = 257)
void livenessEnd_0(spirv_by_reference uint _0, spirv_literal int _1);

spirv_instruction(id = 257)
void livenessEnd_1(spirv_by_reference int _0, spirv_literal int _1);

int someSlowFunc_0(int a_0)
{
    uint _S1 = uint(a_0);
    int _S2 = a_0 * 20;
    uint v_0;
    livenessStart_0(v_0, 0);
    v_0 = _S1;
    int i_0;
    livenessStart_1(i_0, 0);
    i_0 = 0;
    for(;;)
    {
        if(i_0 < _S2)
        {
        }
        else
        {
            break;
        }
        uint _S3 = v_0 >> 1;
        uint _S4 = v_0;
        livenessEnd_0(v_0, 0);
        uint _S5 = (_S3 | _S4 << 31) * uint(i_0);
        int i_1 = i_0 + 1;
        livenessStart_0(v_0, 0);
        v_0 = _S5;
        i_0 = i_1;
    }
    livenessEnd_1(i_0, 0);
    return int(v_0);
}

struct SomeStruct_0
{
    int a_1;
    int x_0;
    int  c_0[100];
};

SomeStruct_0 makeSomeStruct_0()
{
    const int  _S6[100] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    SomeStruct_0 s_0 = { 0, 0, _S6 };
    return s_0;
}

layout(std430, binding = 1) buffer _S7 {
    int _data[];
} anotherBuffer_0;
int doThing_0(SomeStruct_0 s_1)
{
    return s_1.x_0 * 2 + 1;
}

int somethingElse_0(inout SomeStruct_0 s_2)
{
    int _S8 = s_2.x_0 + 1;
    s_2.x_0 = _S8;
    return _S8;
}

layout(std430, binding = 0) buffer _S9 {
    int _data[];
} outputBuffer_0;
spirv_instruction(id = 256)
void livenessStart_2(spirv_by_reference SomeStruct_0 _0, spirv_literal int _1);

spirv_instruction(id = 257)
void livenessEnd_2(spirv_by_reference SomeStruct_0 _0, spirv_literal int _1);

layout(local_size_x = 4, local_size_y = 1, local_size_z = 1) in;
void main()
{
    int index_0 = int(gl_GlobalInvocationID.x);
    const int  _S10[100] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    int _S11 = index_0 & 7;
    SomeStruct_0 _S12 = makeSomeStruct_0();
    int v_1 = someSlowFunc_0(index_0);
    bool _S13 = (v_1 & 256) != 0;
    int _S14 = v_1 & 3;
    int i_2;
    livenessStart_1(i_2, 0);
    i_2 = 0;
    int res_0;
    livenessStart_1(res_0, 0);
    res_0 = index_0;
    for(;;)
    {
        if(i_2 < index_0)
        {
        }
        else
        {
            break;
        }
        SomeStruct_0 s_3;
        livenessStart_2(s_3, 0);
        SomeStruct_0 t_0;
        livenessStart_2(t_0, 0);
        t_0 = _S12;
        SomeStruct_0 u_0;
        if(_S13)
        {
            s_3.x_0 = ((anotherBuffer_0)._data[(uint(_S14))]);
            t_0.x_0 = ((anotherBuffer_0)._data[(uint(_S14))]);
            livenessStart_2(u_0, 0);
            u_0.a_1 = 0;
            u_0.x_0 = 0;
            u_0.c_0 = _S10;
        }
        else
        {
            SomeStruct_0 x_1;
            livenessStart_2(x_1, 0);
            x_1.a_1 = 0;
            x_1.x_0 = 0;
            x_1.c_0 = _S10;
            x_1.x_0 = ((anotherBuffer_0)._data[(uint(_S14))]) + 1;
            SomeStruct_0 _S15 = x_1;
            livenessEnd_2(x_1, 0);
            livenessStart_2(u_0, 0);
            u_0 = _S15;
        }
        s_3.c_0[_S11] = s_3.c_0[_S11] + 1;
        int _S16 = s_3.x_0 + t_0.x_0;
        SomeStruct_0 _S17 = u_0;
        livenessEnd_2(u_0, 0);
        int _S18 = _S16 + _S17.x_0 + doThing_0(t_0);
        int _S19 = somethingElse_0(t_0);
        livenessEnd_2(t_0, 0);
        int _S20 = _S18 + _S19;
        int _S21 = s_3.c_0[2];
        livenessEnd_2(s_3, 0);
        int _S22 = _S20 + _S21;
        int _S23 = res_0;
        livenessEnd_1(res_0, 0);
        int res_1 = _S23 + _S22;
        i_2 = i_2 + 1;
        livenessStart_1(res_0, 0);
        res_0 = res_1;
    }
    livenessEnd_1(i_2, 0);
    int _S24 = res_0;
    livenessEnd_1(res_0, 0);
    ((outputBuffer_0)._data[(uint(index_0))]) = _S24;
    return;
}

}
