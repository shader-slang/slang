result code = -1
standard error = {
tests/diagnostics/bad-operator-call.slang(17): error 39999: no overload for '+=' applicable to arguments of type (int, S)
core.meta.slang(1745): note 39999: candidate: func +=<T, R:int, C:int>(matrix<T,R,C>, T) -> matrix<T,R,C>
core.meta.slang(1737): note 39999: candidate: func +=<T, R:int, C:int>(matrix<T,R,C>, matrix<T,R,C>) -> matrix<T,R,C>
core.meta.slang(1729): note 39999: candidate: func +=<T, N:int>(vector<T,N>, T) -> vector<T,N>
core.meta.slang(1721): note 39999: candidate: func +=<T, N:int>(vector<T,N>, vector<T,N>) -> vector<T,N>
core.meta.slang(1713): note 39999: candidate: func +=<T>(T, T) -> T
tests/diagnostics/bad-operator-call.slang(19): error 39999: no overload for '+' applicable to arguments of type (int, S)
core.meta.slang(1635): note 39999: candidate: func +(uint64_t, uint64_t) -> uint64_t
core.meta.slang(1628): note 39999: candidate: func +(uint, uint) -> uint
core.meta.slang(1621): note 39999: candidate: func +(uint16_t, uint16_t) -> uint16_t
core.meta.slang(1614): note 39999: candidate: func +(uint8_t, uint8_t) -> uint8_t
core.meta.slang(1607): note 39999: candidate: func +(double, double) -> double
core.meta.slang(1600): note 39999: candidate: func +(float, float) -> float
core.meta.slang(1593): note 39999: candidate: func +(half, half) -> half
core.meta.slang(1586): note 39999: candidate: func +(int64_t, int64_t) -> int64_t
core.meta.slang(1579): note 39999: candidate: func +(int, int) -> int
core.meta.slang(1572): note 39999: candidate: func +(int16_t, int16_t) -> int16_t
tests/diagnostics/bad-operator-call.slang(19): note 39999: 1 more overload candidates
tests/diagnostics/bad-operator-call.slang(21): error 39999: no overload for '~' applicable to arguments of type (S)
slang-stdlib.cpp(1646): note 39999: candidate: func ~(uint64_t) -> uint64_t
slang-stdlib.cpp(1643): note 39999: candidate: func ~(uint) -> uint
slang-stdlib.cpp(1640): note 39999: candidate: func ~(uint16_t) -> uint16_t
slang-stdlib.cpp(1637): note 39999: candidate: func ~(uint8_t) -> uint8_t
slang-stdlib.cpp(1634): note 39999: candidate: func ~(int64_t) -> int64_t
slang-stdlib.cpp(1631): note 39999: candidate: func ~(int) -> int
slang-stdlib.cpp(1628): note 39999: candidate: func ~(int16_t) -> int16_t
slang-stdlib.cpp(1625): note 39999: candidate: func ~(int8_t) -> int8_t
tests/diagnostics/bad-operator-call.slang(26): error 30047: argument passed to parameter '0' must be l-value.
tests/diagnostics/bad-operator-call.slang(26): note 30048: argument was implicitly cast from 'int' to 'vector<int,4>', and Slang does not support using an implicit cast as an l-value
tests/diagnostics/bad-operator-call.slang(30): error 39999: no overload for '+=' applicable to arguments of type (vector<float,3>, vector<int,4>)
core.meta.slang(1745): note 39999: candidate: func +=<T, R:int, C:int>(matrix<T,R,C>, T) -> matrix<T,R,C>
core.meta.slang(1737): note 39999: candidate: func +=<T, R:int, C:int>(matrix<T,R,C>, matrix<T,R,C>) -> matrix<T,R,C>
core.meta.slang(1729): note 39999: candidate: func +=<T, N:int>(vector<T,N>, T) -> vector<T,N>
core.meta.slang(1721): note 39999: candidate: func +=<T, N:int>(vector<T,N>, vector<T,N>) -> vector<T,N>
core.meta.slang(1713): note 39999: candidate: func +=<T>(T, T) -> T
tests/diagnostics/bad-operator-call.slang(32): error 39999: no overload for '+' applicable to arguments of type (vector<int,4>, vector<float,3>)
core.meta.slang(1640): note 39999: candidate: func +<4>(vector<uint64_t,4>, uint64_t) -> vector<uint64_t,4>
core.meta.slang(1638): note 39999: candidate: func +<3>(uint64_t, vector<uint64_t,3>) -> vector<uint64_t,3>
core.meta.slang(1635): note 39999: candidate: func +(uint64_t, uint64_t) -> uint64_t
core.meta.slang(1633): note 39999: candidate: func +<4>(vector<uint,4>, uint) -> vector<uint,4>
core.meta.slang(1631): note 39999: candidate: func +<3>(uint, vector<uint,3>) -> vector<uint,3>
core.meta.slang(1628): note 39999: candidate: func +(uint, uint) -> uint
core.meta.slang(1626): note 39999: candidate: func +<4>(vector<uint16_t,4>, uint16_t) -> vector<uint16_t,4>
core.meta.slang(1624): note 39999: candidate: func +<3>(uint16_t, vector<uint16_t,3>) -> vector<uint16_t,3>
core.meta.slang(1621): note 39999: candidate: func +(uint16_t, uint16_t) -> uint16_t
core.meta.slang(1619): note 39999: candidate: func +<4>(vector<uint8_t,4>, uint8_t) -> vector<uint8_t,4>
tests/diagnostics/bad-operator-call.slang(32): note 39999: 23 more overload candidates
}
standard output = {
}
