result code = 0
standard error = {
}
standard output = {
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  LINEDEN   float       
// SV_TessFactor            1   x           1  LINEDET   float       
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// CPOINT                   0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Isoline                                 4
//
ds_5_1
dcl_input_control_point_count 4
dcl_tessellator_domain domain_isoline
dcl_globalFlags refactoringAllowed
dcl_input vDomain.x
dcl_input vicp[4][0].xyz
dcl_output_siv o0.xyzw, position
dcl_temps 2
add r0.x, -vDomain.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.z, r0.y, r0.x
mul r0.y, r0.y, vDomain.x
mul r0.xy, r0.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000)
mul r1.xyz, r0.yyyy, vicp[1][0].xyzx
mad r0.yzw, r0.zzzz, vicp[0][0].xxyz, r1.xxyz
mul r1.x, vDomain.x, vDomain.x
mul r0.x, r0.x, r1.x
mad r0.xyz, r0.xxxx, vicp[2][0].xyzx, r0.yzwy
mul r0.w, r1.x, vDomain.x
mad o0.xyz, r0.wwww, vicp[3][0].xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 14 instruction slots used
}
