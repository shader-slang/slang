ModuleDecl:0 {
    astNodeType : ModuleDecl
    loc : SourceLoc(1343960) tests/autodiff/getter-setter.slang:5
    modifiers :  { 
    }
    parentDecl : null
    nameAndLoc : NameLoc{"getter-setter", SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        VarDecl:1,
        StructDecl:2,
        StructDecl:3,
        TypeDefDecl:4,
        EmptyDecl:5,
        FuncDecl:6,
        FuncDecl:7
    }
    closingSourceLoc : SourceLoc(1345116) tests/autodiff/getter-setter.slang:74
    ownedScope : ::?::getter-setter
    module : Unknown@0x0000558918cba280
    mapDeclToAssociatedDecls :  { 
    }
    isInLegacyLanguage : 1
}
VarDecl:1 {
    astNodeType : VarDecl
    loc : SourceLoc(1343986) tests/autodiff/getter-setter.slang:5
    modifiers :  { 
    }
    parentDecl : ModuleDecl:0
    nameAndLoc : NameLoc{"outputBuffer", SourceLoc(1343986) tests/autodiff/getter-setter.slang:5 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        GenericAppExpr:8,
        null
    }
    initExpr : null
    val : null
}
StructDecl:2 {
    astNodeType : StructDecl
    loc : SourceLoc(1344008) tests/autodiff/getter-setter.slang:7
    modifiers :  { 
    }
    parentDecl : ModuleDecl:0
    nameAndLoc : NameLoc{"B", SourceLoc(1344008) tests/autodiff/getter-setter.slang:7 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        InheritanceDecl:9,
        TypeDefDecl:10,
        EmptyDecl:11,
        VarDecl:12,
        ConstructorDecl:13
    }
    closingSourceLoc : SourceLoc(1344116) tests/autodiff/getter-setter.slang:17
    ownedScope : ::?::getter-setter::B
    typeTags : 0
    wrappedType :  { 
        null,
        null
    }
    hasBody : 1
}
StructDecl:3 {
    astNodeType : StructDecl
    loc : SourceLoc(1344127) tests/autodiff/getter-setter.slang:19
    modifiers :  { 
    }
    parentDecl : ModuleDecl:0
    nameAndLoc : NameLoc{"A", SourceLoc(1344127) tests/autodiff/getter-setter.slang:19 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        InheritanceDecl:14,
        TypeDefDecl:15,
        EmptyDecl:16,
        VarDecl:17,
        VarDecl:18,
        FuncDecl:19,
        FuncDecl:20,
        GenericDecl:21
    }
    closingSourceLoc : SourceLoc(1344683) tests/autodiff/getter-setter.slang:47
    ownedScope : ::?::getter-setter::A
    typeTags : 0
    wrappedType :  { 
        null,
        null
    }
    hasBody : 1
}
TypeDefDecl:4 {
    astNodeType : TypeDefDecl
    loc : SourceLoc(1344715) tests/autodiff/getter-setter.slang:49
    modifiers :  { 
    }
    parentDecl : ModuleDecl:0
    nameAndLoc : NameLoc{"dpA", SourceLoc(1344715) tests/autodiff/getter-setter.slang:49 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        GenericAppExpr:22,
        null
    }
}
EmptyDecl:5 {
    astNodeType : EmptyDecl
    loc : SourceLoc(1344718) tests/autodiff/getter-setter.slang:49
    modifiers :  { 
    }
    parentDecl : ModuleDecl:0
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
}
FuncDecl:6 {
    astNodeType : FuncDecl
    loc : SourceLoc(1344747) tests/autodiff/getter-setter.slang:52
    modifiers :  { 
        UncheckedAttribute:23
    }
    parentDecl : ModuleDecl:0
    nameAndLoc : NameLoc{"f", SourceLoc(1344747) tests/autodiff/getter-setter.slang:52 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        ParamDecl:24
    }
    closingSourceLoc : SourceLoc(1344838) tests/autodiff/getter-setter.slang:59
    ownedScope : ::?::getter-setter::f
    returnType :  { 
        VarExpr:25,
        null
    }
    errorType :  { 
        null,
        null
    }
    primaryDecl : null
    nextDecl : null
    body : BlockStmt:26
}
FuncDecl:7 {
    astNodeType : FuncDecl
    loc : SourceLoc(1344868) tests/autodiff/getter-setter.slang:62
    modifiers :  { 
        UncheckedAttribute:27
    }
    parentDecl : ModuleDecl:0
    nameAndLoc : NameLoc{"computeMain", SourceLoc(1344868) tests/autodiff/getter-setter.slang:62 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        ParamDecl:28
    }
    closingSourceLoc : SourceLoc(1345114) tests/autodiff/getter-setter.slang:73
    ownedScope : ::?::getter-setter::computeMain
    returnType :  { 
        VarExpr:29,
        null
    }
    errorType :  { 
        null,
        null
    }
    primaryDecl : null
    nextDecl : null
    body : BlockStmt:30
}
GenericAppExpr:8 {
    astNodeType : GenericAppExpr
    loc : SourceLoc(1343960) tests/autodiff/getter-setter.slang:5
    type : rvalue null
    arguments :  { 
        VarExpr:31
    }
    functionExpr : VarExpr:32
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
    }
}
InheritanceDecl:9 {
    astNodeType : InheritanceDecl
    loc : SourceLoc(1344012) tests/autodiff/getter-setter.slang:7
    modifiers :  { 
    }
    parentDecl : StructDecl:2
    nameAndLoc : NameLoc{"$inheritance", SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    base :  { 
        VarExpr:33,
        null
    }
    witnessTable : null
}
TypeDefDecl:10 {
    astNodeType : TypeDefDecl
    loc : SourceLoc(1344044) tests/autodiff/getter-setter.slang:9
    modifiers :  { 
    }
    parentDecl : StructDecl:2
    nameAndLoc : NameLoc{"Differential", SourceLoc(1344044) tests/autodiff/getter-setter.slang:9 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:34,
        null
    }
}
EmptyDecl:11 {
    astNodeType : EmptyDecl
    loc : SourceLoc(1344056) tests/autodiff/getter-setter.slang:9
    modifiers :  { 
    }
    parentDecl : StructDecl:2
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
}
VarDecl:12 {
    astNodeType : VarDecl
    loc : SourceLoc(1344069) tests/autodiff/getter-setter.slang:11
    modifiers :  { 
    }
    parentDecl : StructDecl:2
    nameAndLoc : NameLoc{"z", SourceLoc(1344069) tests/autodiff/getter-setter.slang:11 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:35,
        null
    }
    initExpr : null
    val : null
}
ConstructorDecl:13 {
    astNodeType : ConstructorDecl
    loc : SourceLoc(1344077) tests/autodiff/getter-setter.slang:13
    modifiers :  { 
    }
    parentDecl : StructDecl:2
    nameAndLoc : NameLoc{"$init", SourceLoc(1344077) tests/autodiff/getter-setter.slang:13 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
    }
    closingSourceLoc : SourceLoc(1344114) tests/autodiff/getter-setter.slang:16
    ownedScope : ::?::getter-setter::B::$init
    returnType :  { 
        null,
        null
    }
    errorType :  { 
        null,
        null
    }
    primaryDecl : null
    nextDecl : null
    body : BlockStmt:36
}
InheritanceDecl:14 {
    astNodeType : InheritanceDecl
    loc : SourceLoc(1344131) tests/autodiff/getter-setter.slang:19
    modifiers :  { 
    }
    parentDecl : StructDecl:3
    nameAndLoc : NameLoc{"$inheritance", SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    base :  { 
        VarExpr:37,
        null
    }
    witnessTable : null
}
TypeDefDecl:15 {
    astNodeType : TypeDefDecl
    loc : SourceLoc(1344163) tests/autodiff/getter-setter.slang:21
    modifiers :  { 
    }
    parentDecl : StructDecl:3
    nameAndLoc : NameLoc{"Differential", SourceLoc(1344163) tests/autodiff/getter-setter.slang:21 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:38,
        null
    }
}
EmptyDecl:16 {
    astNodeType : EmptyDecl
    loc : SourceLoc(1344175) tests/autodiff/getter-setter.slang:21
    modifiers :  { 
    }
    parentDecl : StructDecl:3
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
}
VarDecl:17 {
    astNodeType : VarDecl
    loc : SourceLoc(1344220) tests/autodiff/getter-setter.slang:24
    modifiers :  { 
        UncheckedAttribute:39
    }
    parentDecl : StructDecl:3
    nameAndLoc : NameLoc{"x", SourceLoc(1344220) tests/autodiff/getter-setter.slang:24 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:40,
        null
    }
    initExpr : null
    val : null
}
VarDecl:18 {
    astNodeType : VarDecl
    loc : SourceLoc(1344233) tests/autodiff/getter-setter.slang:25
    modifiers :  { 
    }
    parentDecl : StructDecl:3
    nameAndLoc : NameLoc{"y", SourceLoc(1344233) tests/autodiff/getter-setter.slang:25 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:41,
        null
    }
    initExpr : null
    val : null
}
FuncDecl:19 {
    astNodeType : FuncDecl
    loc : SourceLoc(1344292) tests/autodiff/getter-setter.slang:28
    modifiers :  { 
        UncheckedAttribute:42
        HLSLStaticModifier:43
    }
    parentDecl : StructDecl:3
    nameAndLoc : NameLoc{"dzero", SourceLoc(1344292) tests/autodiff/getter-setter.slang:28 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
    }
    closingSourceLoc : SourceLoc(1344349) tests/autodiff/getter-setter.slang:32
    ownedScope : ::?::getter-setter::A::dzero
    returnType :  { 
        VarExpr:44,
        null
    }
    errorType :  { 
        null,
        null
    }
    primaryDecl : null
    nextDecl : null
    body : BlockStmt:45
}
FuncDecl:20 {
    astNodeType : FuncDecl
    loc : SourceLoc(1344407) tests/autodiff/getter-setter.slang:35
    modifiers :  { 
        UncheckedAttribute:46
        HLSLStaticModifier:47
    }
    parentDecl : StructDecl:3
    nameAndLoc : NameLoc{"dadd", SourceLoc(1344407) tests/autodiff/getter-setter.slang:35 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        ParamDecl:48,
        ParamDecl:49
    }
    closingSourceLoc : SourceLoc(1344499) tests/autodiff/getter-setter.slang:39
    ownedScope : ::?::getter-setter::A::dadd
    returnType :  { 
        VarExpr:50,
        null
    }
    errorType :  { 
        null,
        null
    }
    primaryDecl : null
    nextDecl : null
    body : BlockStmt:51
}
GenericDecl:21 {
    astNodeType : GenericDecl
    loc : SourceLoc(1344557) tests/autodiff/getter-setter.slang:42
    modifiers :  { 
    }
    parentDecl : StructDecl:3
    nameAndLoc : NameLoc{"dmul", SourceLoc(1344557) tests/autodiff/getter-setter.slang:42 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        GenericTypeConstraintDecl:52,
        GenericTypeParamDecl:53
    }
    closingSourceLoc : SourceLoc(0)
    ownedScope : ::?::getter-setter::A::dmul
    inner : FuncDecl:54
}
GenericAppExpr:22 {
    astNodeType : GenericAppExpr
    loc : SourceLoc(1344695) tests/autodiff/getter-setter.slang:49
    type : rvalue null
    arguments :  { 
        VarExpr:55
    }
    functionExpr : VarExpr:56
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
    }
}
UncheckedAttribute:23 {
    astNodeType : UncheckedAttribute
    loc : SourceLoc(1344722) tests/autodiff/getter-setter.slang:51
    next : null
    keywordName : "ForwardDifferentiable"
    attributeDecl : null
    originalIdentifierToken :  { identifier, SourceLoc(1344722) tests/autodiff/getter-setter.slang:51, "ForwardDifferentiable" }
    args :  { 
    }
}
ParamDecl:24 {
    astNodeType : ParamDecl
    loc : SourceLoc(1344751) tests/autodiff/getter-setter.slang:52
    modifiers :  { 
    }
    parentDecl : FuncDecl:6
    nameAndLoc : NameLoc{"a", SourceLoc(1344751) tests/autodiff/getter-setter.slang:52 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:57,
        null
    }
    initExpr : null
    val : null
}
VarExpr:25 {
    astNodeType : VarExpr
    loc : SourceLoc(1344745) tests/autodiff/getter-setter.slang:52
    type : rvalue null
    declRef : 
    name : "A"
    originalExpr : null
}
BlockStmt:26 {
    astNodeType : BlockStmt
    loc : SourceLoc(1344760) tests/autodiff/getter-setter.slang:54
    modifiers :  { 
    }
    scopeDecl : ScopeDecl:58
    closingSourceLoc : SourceLoc(1344838) tests/autodiff/getter-setter.slang:59
    body : SeqStmt:59
}
UncheckedAttribute:27 {
    astNodeType : UncheckedAttribute
    loc : SourceLoc(1344842) tests/autodiff/getter-setter.slang:61
    next : null
    keywordName : "numthreads"
    attributeDecl : null
    originalIdentifierToken :  { identifier, SourceLoc(1344842) tests/autodiff/getter-setter.slang:61, "numthreads" }
    args :  { 
        IntegerLiteralExpr:60,
        IntegerLiteralExpr:61,
        IntegerLiteralExpr:62
    }
}
ParamDecl:28 {
    astNodeType : ParamDecl
    loc : SourceLoc(1344886) tests/autodiff/getter-setter.slang:62
    modifiers :  { 
        HLSLSimpleSemantic:63
    }
    parentDecl : FuncDecl:7
    nameAndLoc : NameLoc{"dispatchThreadID", SourceLoc(1344886) tests/autodiff/getter-setter.slang:62 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:64,
        null
    }
    initExpr : null
    val : null
}
VarExpr:29 {
    astNodeType : VarExpr
    loc : SourceLoc(1344863) tests/autodiff/getter-setter.slang:62
    type : rvalue null
    declRef : 
    name : "void"
    originalExpr : null
}
BlockStmt:30 {
    astNodeType : BlockStmt
    loc : SourceLoc(1344932) tests/autodiff/getter-setter.slang:64
    modifiers :  { 
    }
    scopeDecl : ScopeDecl:65
    closingSourceLoc : SourceLoc(1345114) tests/autodiff/getter-setter.slang:73
    body : BlockStmt:66
}
VarExpr:31 {
    astNodeType : VarExpr
    loc : SourceLoc(1343979) tests/autodiff/getter-setter.slang:5
    type : rvalue null
    declRef : 
    name : "float"
    originalExpr : null
}
VarExpr:32 {
    astNodeType : VarExpr
    loc : SourceLoc(1343960) tests/autodiff/getter-setter.slang:5
    type : rvalue null
    declRef : 
    name : "RWStructuredBuffer"
    originalExpr : null
}
VarExpr:33 {
    astNodeType : VarExpr
    loc : SourceLoc(1344012) tests/autodiff/getter-setter.slang:7
    type : rvalue null
    declRef : 
    name : "IDifferentiable"
    originalExpr : null
}
VarExpr:34 {
    astNodeType : VarExpr
    loc : SourceLoc(1344042) tests/autodiff/getter-setter.slang:9
    type : rvalue null
    declRef : 
    name : "B"
    originalExpr : null
}
VarExpr:35 {
    astNodeType : VarExpr
    loc : SourceLoc(1344063) tests/autodiff/getter-setter.slang:11
    type : rvalue null
    declRef : 
    name : "float"
    originalExpr : null
}
BlockStmt:36 {
    astNodeType : BlockStmt
    loc : SourceLoc(1344100) tests/autodiff/getter-setter.slang:15
    modifiers :  { 
    }
    scopeDecl : ScopeDecl:67
    closingSourceLoc : SourceLoc(1344114) tests/autodiff/getter-setter.slang:16
    body : ExpressionStmt:68
}
VarExpr:37 {
    astNodeType : VarExpr
    loc : SourceLoc(1344131) tests/autodiff/getter-setter.slang:19
    type : rvalue null
    declRef : 
    name : "IDifferentiable"
    originalExpr : null
}
VarExpr:38 {
    astNodeType : VarExpr
    loc : SourceLoc(1344161) tests/autodiff/getter-setter.slang:21
    type : rvalue null
    declRef : 
    name : "B"
    originalExpr : null
}
UncheckedAttribute:39 {
    astNodeType : UncheckedAttribute
    loc : SourceLoc(1344187) tests/autodiff/getter-setter.slang:23
    next : null
    keywordName : "DerivativeMember"
    attributeDecl : null
    originalIdentifierToken :  { identifier, SourceLoc(1344187) tests/autodiff/getter-setter.slang:23, "DerivativeMember" }
    args :  { 
        MemberExpr:69
    }
}
VarExpr:40 {
    astNodeType : VarExpr
    loc : SourceLoc(1344214) tests/autodiff/getter-setter.slang:24
    type : rvalue null
    declRef : 
    name : "float"
    originalExpr : null
}
VarExpr:41 {
    astNodeType : VarExpr
    loc : SourceLoc(1344227) tests/autodiff/getter-setter.slang:25
    type : rvalue null
    declRef : 
    name : "float"
    originalExpr : null
}
UncheckedAttribute:42 {
    astNodeType : UncheckedAttribute
    loc : SourceLoc(1344242) tests/autodiff/getter-setter.slang:27
    next : HLSLStaticModifier:43
    keywordName : "__unsafeForceInlineEarly"
    attributeDecl : null
    originalIdentifierToken :  { identifier, SourceLoc(1344242) tests/autodiff/getter-setter.slang:27, "__unsafeForceInlineEarly" }
    args :  { 
    }
}
HLSLStaticModifier:43 {
    astNodeType : HLSLStaticModifier
    loc : SourceLoc(1344272) tests/autodiff/getter-setter.slang:28
    next : null
    keywordName : "static"
}
VarExpr:44 {
    astNodeType : VarExpr
    loc : SourceLoc(1344279) tests/autodiff/getter-setter.slang:28
    type : rvalue null
    declRef : 
    name : "Differential"
    originalExpr : null
}
BlockStmt:45 {
    astNodeType : BlockStmt
    loc : SourceLoc(1344314) tests/autodiff/getter-setter.slang:30
    modifiers :  { 
    }
    scopeDecl : ScopeDecl:70
    closingSourceLoc : SourceLoc(1344349) tests/autodiff/getter-setter.slang:32
    body : SeqStmt:71
}
UncheckedAttribute:46 {
    astNodeType : UncheckedAttribute
    loc : SourceLoc(1344357) tests/autodiff/getter-setter.slang:34
    next : HLSLStaticModifier:47
    keywordName : "__unsafeForceInlineEarly"
    attributeDecl : null
    originalIdentifierToken :  { identifier, SourceLoc(1344357) tests/autodiff/getter-setter.slang:34, "__unsafeForceInlineEarly" }
    args :  { 
    }
}
HLSLStaticModifier:47 {
    astNodeType : HLSLStaticModifier
    loc : SourceLoc(1344387) tests/autodiff/getter-setter.slang:35
    next : null
    keywordName : "static"
}
ParamDecl:48 {
    astNodeType : ParamDecl
    loc : SourceLoc(1344425) tests/autodiff/getter-setter.slang:35
    modifiers :  { 
    }
    parentDecl : FuncDecl:20
    nameAndLoc : NameLoc{"a", SourceLoc(1344425) tests/autodiff/getter-setter.slang:35 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:72,
        null
    }
    initExpr : null
    val : null
}
ParamDecl:49 {
    astNodeType : ParamDecl
    loc : SourceLoc(1344441) tests/autodiff/getter-setter.slang:35
    modifiers :  { 
    }
    parentDecl : FuncDecl:20
    nameAndLoc : NameLoc{"b", SourceLoc(1344441) tests/autodiff/getter-setter.slang:35 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:73,
        null
    }
    initExpr : null
    val : null
}
VarExpr:50 {
    astNodeType : VarExpr
    loc : SourceLoc(1344394) tests/autodiff/getter-setter.slang:35
    type : rvalue null
    declRef : 
    name : "Differential"
    originalExpr : null
}
BlockStmt:51 {
    astNodeType : BlockStmt
    loc : SourceLoc(1344458) tests/autodiff/getter-setter.slang:37
    modifiers :  { 
    }
    scopeDecl : ScopeDecl:74
    closingSourceLoc : SourceLoc(1344499) tests/autodiff/getter-setter.slang:39
    body : SeqStmt:75
}
GenericTypeConstraintDecl:52 {
    astNodeType : GenericTypeConstraintDecl
    loc : SourceLoc(1344566) tests/autodiff/getter-setter.slang:42
    modifiers :  { 
    }
    parentDecl : GenericDecl:21
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    sub :  { 
        SharedTypeExpr:76,
        null
    }
    sup :  { 
        VarExpr:77,
        null
    }
}
GenericTypeParamDecl:53 {
    astNodeType : GenericTypeParamDecl
    loc : SourceLoc(1344562) tests/autodiff/getter-setter.slang:42
    modifiers :  { 
    }
    parentDecl : GenericDecl:21
    nameAndLoc : NameLoc{"T", SourceLoc(1344562) tests/autodiff/getter-setter.slang:42 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    initType :  { 
        null,
        null
    }
}
FuncDecl:54 {
    astNodeType : FuncDecl
    loc : SourceLoc(1344557) tests/autodiff/getter-setter.slang:42
    modifiers :  { 
        UncheckedAttribute:78
        HLSLStaticModifier:79
    }
    parentDecl : GenericDecl:21
    nameAndLoc : NameLoc{"dmul", SourceLoc(1344557) tests/autodiff/getter-setter.slang:42 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        ParamDecl:80,
        ParamDecl:81
    }
    closingSourceLoc : SourceLoc(1344681) tests/autodiff/getter-setter.slang:46
    ownedScope : ::?::getter-setter::A::dmul::dmul
    returnType :  { 
        VarExpr:82,
        null
    }
    errorType :  { 
        null,
        null
    }
    primaryDecl : null
    nextDecl : null
    body : BlockStmt:83
}
VarExpr:55 {
    astNodeType : VarExpr
    loc : SourceLoc(1344712) tests/autodiff/getter-setter.slang:49
    type : rvalue null
    declRef : 
    name : "A"
    originalExpr : null
}
VarExpr:56 {
    astNodeType : VarExpr
    loc : SourceLoc(1344695) tests/autodiff/getter-setter.slang:49
    type : rvalue null
    declRef : 
    name : "DifferentialPair"
    originalExpr : null
}
VarExpr:57 {
    astNodeType : VarExpr
    loc : SourceLoc(1344749) tests/autodiff/getter-setter.slang:52
    type : rvalue null
    declRef : 
    name : "A"
    originalExpr : null
}
ScopeDecl:58 {
    astNodeType : ScopeDecl
    loc : SourceLoc(0)
    modifiers :  { 
    }
    parentDecl : FuncDecl:6
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        VarDecl:84
    }
    closingSourceLoc : SourceLoc(0)
    ownedScope : ::?::getter-setter::f::?
}
SeqStmt:59 {
    astNodeType : SeqStmt
    loc : SourceLoc(1344760) tests/autodiff/getter-setter.slang:54
    modifiers :  { 
    }
    stmts :  { 
        DeclStmt:85,
        ExpressionStmt:86,
        ExpressionStmt:87,
        ReturnStmt:88
    }
}
IntegerLiteralExpr:60 {
    astNodeType : IntegerLiteralExpr
    loc : SourceLoc(1344853) tests/autodiff/getter-setter.slang:61
    type : rvalue null
    token :  { integer literal, SourceLoc(1344853) tests/autodiff/getter-setter.slang:61, "1" }
    suffixType : int
    value : 1
}
IntegerLiteralExpr:61 {
    astNodeType : IntegerLiteralExpr
    loc : SourceLoc(1344856) tests/autodiff/getter-setter.slang:61
    type : rvalue null
    token :  { integer literal, SourceLoc(1344856) tests/autodiff/getter-setter.slang:61, "1" }
    suffixType : int
    value : 1
}
IntegerLiteralExpr:62 {
    astNodeType : IntegerLiteralExpr
    loc : SourceLoc(1344859) tests/autodiff/getter-setter.slang:61
    type : rvalue null
    token :  { integer literal, SourceLoc(1344859) tests/autodiff/getter-setter.slang:61, "1" }
    suffixType : int
    value : 1
}
HLSLSimpleSemantic:63 {
    astNodeType : HLSLSimpleSemantic
    loc : SourceLoc(1344905) tests/autodiff/getter-setter.slang:62
    next : null
    keywordName : null
    name :  { identifier, SourceLoc(1344905) tests/autodiff/getter-setter.slang:62, "SV_DispatchThreadID" }
}
VarExpr:64 {
    astNodeType : VarExpr
    loc : SourceLoc(1344880) tests/autodiff/getter-setter.slang:62
    type : rvalue null
    declRef : 
    name : "uint3"
    originalExpr : null
}
ScopeDecl:65 {
    astNodeType : ScopeDecl
    loc : SourceLoc(0)
    modifiers :  { 
    }
    parentDecl : FuncDecl:7
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
    }
    closingSourceLoc : SourceLoc(0)
    ownedScope : ::?::getter-setter::computeMain::?
}
BlockStmt:66 {
    astNodeType : BlockStmt
    loc : SourceLoc(1344942) tests/autodiff/getter-setter.slang:65
    modifiers :  { 
    }
    scopeDecl : ScopeDecl:89
    closingSourceLoc : SourceLoc(1345112) tests/autodiff/getter-setter.slang:72
    body : SeqStmt:90
}
ScopeDecl:67 {
    astNodeType : ScopeDecl
    loc : SourceLoc(0)
    modifiers :  { 
    }
    parentDecl : ConstructorDecl:13
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
    }
    closingSourceLoc : SourceLoc(0)
    ownedScope : ::?::getter-setter::B::$init::?
}
ExpressionStmt:68 {
    astNodeType : ExpressionStmt
    loc : SourceLoc(1344100) tests/autodiff/getter-setter.slang:15
    modifiers :  { 
    }
    expression : AssignExpr:91
}
MemberExpr:69 {
    astNodeType : MemberExpr
    loc : SourceLoc(1344206) tests/autodiff/getter-setter.slang:23
    type : rvalue null
    declRef : 
    name : "z"
    originalExpr : null
    baseExpression : VarExpr:92
    memberOperatorLoc : SourceLoc(1344205) tests/autodiff/getter-setter.slang:23
}
ScopeDecl:70 {
    astNodeType : ScopeDecl
    loc : SourceLoc(0)
    modifiers :  { 
    }
    parentDecl : FuncDecl:19
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        VarDecl:93
    }
    closingSourceLoc : SourceLoc(0)
    ownedScope : ::?::getter-setter::A::dzero::?
}
SeqStmt:71 {
    astNodeType : SeqStmt
    loc : SourceLoc(1344314) tests/autodiff/getter-setter.slang:30
    modifiers :  { 
    }
    stmts :  { 
        DeclStmt:94,
        ReturnStmt:95
    }
}
VarExpr:72 {
    astNodeType : VarExpr
    loc : SourceLoc(1344412) tests/autodiff/getter-setter.slang:35
    type : rvalue null
    declRef : 
    name : "Differential"
    originalExpr : null
}
VarExpr:73 {
    astNodeType : VarExpr
    loc : SourceLoc(1344428) tests/autodiff/getter-setter.slang:35
    type : rvalue null
    declRef : 
    name : "Differential"
    originalExpr : null
}
ScopeDecl:74 {
    astNodeType : ScopeDecl
    loc : SourceLoc(0)
    modifiers :  { 
    }
    parentDecl : FuncDecl:20
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        VarDecl:96
    }
    closingSourceLoc : SourceLoc(0)
    ownedScope : ::?::getter-setter::A::dadd::?
}
SeqStmt:75 {
    astNodeType : SeqStmt
    loc : SourceLoc(1344458) tests/autodiff/getter-setter.slang:37
    modifiers :  { 
    }
    stmts :  { 
        DeclStmt:97,
        ReturnStmt:98
    }
}
SharedTypeExpr:76 {
    astNodeType : SharedTypeExpr
    loc : SourceLoc(1344562) tests/autodiff/getter-setter.slang:42
    type : rvalue TypeType:99
    base :  { 
        null,
        DeclRefType:100
    }
}
VarExpr:77 {
    astNodeType : VarExpr
    loc : SourceLoc(1344566) tests/autodiff/getter-setter.slang:42
    type : rvalue null
    declRef : 
    name : "__BuiltinRealType"
    originalExpr : null
}
UncheckedAttribute:78 {
    astNodeType : UncheckedAttribute
    loc : SourceLoc(1344507) tests/autodiff/getter-setter.slang:41
    next : HLSLStaticModifier:79
    keywordName : "__unsafeForceInlineEarly"
    attributeDecl : null
    originalIdentifierToken :  { identifier, SourceLoc(1344507) tests/autodiff/getter-setter.slang:41, "__unsafeForceInlineEarly" }
    args :  { 
    }
}
HLSLStaticModifier:79 {
    astNodeType : HLSLStaticModifier
    loc : SourceLoc(1344537) tests/autodiff/getter-setter.slang:42
    next : null
    keywordName : "static"
}
ParamDecl:80 {
    astNodeType : ParamDecl
    loc : SourceLoc(1344587) tests/autodiff/getter-setter.slang:42
    modifiers :  { 
    }
    parentDecl : FuncDecl:54
    nameAndLoc : NameLoc{"a", SourceLoc(1344587) tests/autodiff/getter-setter.slang:42 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:101,
        null
    }
    initExpr : null
    val : null
}
ParamDecl:81 {
    astNodeType : ParamDecl
    loc : SourceLoc(1344603) tests/autodiff/getter-setter.slang:42
    modifiers :  { 
    }
    parentDecl : FuncDecl:54
    nameAndLoc : NameLoc{"b", SourceLoc(1344603) tests/autodiff/getter-setter.slang:42 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:102,
        null
    }
    initExpr : null
    val : null
}
VarExpr:82 {
    astNodeType : VarExpr
    loc : SourceLoc(1344544) tests/autodiff/getter-setter.slang:42
    type : rvalue null
    declRef : 
    name : "Differential"
    originalExpr : null
}
BlockStmt:83 {
    astNodeType : BlockStmt
    loc : SourceLoc(1344620) tests/autodiff/getter-setter.slang:44
    modifiers :  { 
    }
    scopeDecl : ScopeDecl:103
    closingSourceLoc : SourceLoc(1344681) tests/autodiff/getter-setter.slang:46
    body : SeqStmt:104
}
VarDecl:84 {
    astNodeType : VarDecl
    loc : SourceLoc(1344762) tests/autodiff/getter-setter.slang:54
    modifiers :  { 
    }
    parentDecl : ScopeDecl:58
    nameAndLoc : NameLoc{"aout", SourceLoc(1344762) tests/autodiff/getter-setter.slang:54 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:105,
        null
    }
    initExpr : null
    val : null
}
DeclStmt:85 {
    astNodeType : DeclStmt
    loc : SourceLoc(1344760) tests/autodiff/getter-setter.slang:54
    modifiers :  { 
    }
    decl : VarDecl:84
}
ExpressionStmt:86 {
    astNodeType : ExpressionStmt
    loc : SourceLoc(1344772) tests/autodiff/getter-setter.slang:55
    modifiers :  { 
    }
    expression : AssignExpr:106
}
ExpressionStmt:87 {
    astNodeType : ExpressionStmt
    loc : SourceLoc(1344802) tests/autodiff/getter-setter.slang:56
    modifiers :  { 
    }
    expression : AssignExpr:107
}
ReturnStmt:88 {
    astNodeType : ReturnStmt
    loc : SourceLoc(1344825) tests/autodiff/getter-setter.slang:58
    modifiers :  { 
    }
    expression : VarExpr:108
}
ScopeDecl:89 {
    astNodeType : ScopeDecl
    loc : SourceLoc(0)
    modifiers :  { 
    }
    parentDecl : ScopeDecl:65
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        VarDecl:109,
        VarDecl:110,
        VarDecl:111,
        VarDecl:112
    }
    closingSourceLoc : SourceLoc(0)
    ownedScope : ::?::getter-setter::computeMain::?::?
}
SeqStmt:90 {
    astNodeType : SeqStmt
    loc : SourceLoc(1344942) tests/autodiff/getter-setter.slang:65
    modifiers :  { 
    }
    stmts :  { 
        DeclStmt:113,
        DeclStmt:114,
        DeclStmt:115,
        DeclStmt:116,
        ExpressionStmt:117
    }
}
AssignExpr:91 {
    astNodeType : AssignExpr
    loc : SourceLoc(1344102) tests/autodiff/getter-setter.slang:15
    type : rvalue null
    left : VarExpr:118
    right : FloatingPointLiteralExpr:119
}
VarExpr:92 {
    astNodeType : VarExpr
    loc : SourceLoc(1344204) tests/autodiff/getter-setter.slang:23
    type : rvalue null
    declRef : 
    name : "B"
    originalExpr : null
}
VarDecl:93 {
    astNodeType : VarDecl
    loc : SourceLoc(1344316) tests/autodiff/getter-setter.slang:30
    modifiers :  { 
    }
    parentDecl : ScopeDecl:70
    nameAndLoc : NameLoc{"b", SourceLoc(1344316) tests/autodiff/getter-setter.slang:30 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:120,
        null
    }
    initExpr : InitializerListExpr:121
    val : null
}
DeclStmt:94 {
    astNodeType : DeclStmt
    loc : SourceLoc(1344314) tests/autodiff/getter-setter.slang:30
    modifiers :  { 
    }
    decl : VarDecl:93
}
ReturnStmt:95 {
    astNodeType : ReturnStmt
    loc : SourceLoc(1344335) tests/autodiff/getter-setter.slang:31
    modifiers :  { 
    }
    expression : VarExpr:122
}
VarDecl:96 {
    astNodeType : VarDecl
    loc : SourceLoc(1344460) tests/autodiff/getter-setter.slang:37
    modifiers :  { 
    }
    parentDecl : ScopeDecl:74
    nameAndLoc : NameLoc{"o", SourceLoc(1344460) tests/autodiff/getter-setter.slang:37 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:123,
        null
    }
    initExpr : InitializerListExpr:124
    val : null
}
DeclStmt:97 {
    astNodeType : DeclStmt
    loc : SourceLoc(1344458) tests/autodiff/getter-setter.slang:37
    modifiers :  { 
    }
    decl : VarDecl:96
}
ReturnStmt:98 {
    astNodeType : ReturnStmt
    loc : SourceLoc(1344485) tests/autodiff/getter-setter.slang:38
    modifiers :  { 
    }
    expression : VarExpr:125
}
TypeType:99 {
    astNodeType : TypeType
    m_operands :  { 
        DeclRefType:100
    }
}
DeclRefType:100 {
    astNodeType : DeclRefType
    m_operands :  { 
        DirectDeclRef:126
    }
}
VarExpr:101 {
    astNodeType : VarExpr
    loc : SourceLoc(1344585) tests/autodiff/getter-setter.slang:42
    type : rvalue null
    declRef : 
    name : "T"
    originalExpr : null
}
VarExpr:102 {
    astNodeType : VarExpr
    loc : SourceLoc(1344590) tests/autodiff/getter-setter.slang:42
    type : rvalue null
    declRef : 
    name : "Differential"
    originalExpr : null
}
ScopeDecl:103 {
    astNodeType : ScopeDecl
    loc : SourceLoc(0)
    modifiers :  { 
    }
    parentDecl : FuncDecl:54
    nameAndLoc : NameLoc{null, SourceLoc(0) }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    members :  { 
        VarDecl:127
    }
    closingSourceLoc : SourceLoc(0)
    ownedScope : ::?::getter-setter::A::dmul::dmul::?
}
SeqStmt:104 {
    astNodeType : SeqStmt
    loc : SourceLoc(1344620) tests/autodiff/getter-setter.slang:44
    modifiers :  { 
    }
    stmts :  { 
        DeclStmt:128,
        ReturnStmt:129
    }
}
VarExpr:105 {
    astNodeType : VarExpr
    loc : SourceLoc(1344760) tests/autodiff/getter-setter.slang:54
    type : rvalue null
    declRef : 
    name : "A"
    originalExpr : null
}
AssignExpr:106 {
    astNodeType : AssignExpr
    loc : SourceLoc(1344779) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    left : MemberExpr:130
    right : InvokeExpr:131
}
AssignExpr:107 {
    astNodeType : AssignExpr
    loc : SourceLoc(1344809) tests/autodiff/getter-setter.slang:56
    type : rvalue null
    left : MemberExpr:132
    right : InfixExpr:133
}
VarExpr:108 {
    astNodeType : VarExpr
    loc : SourceLoc(1344832) tests/autodiff/getter-setter.slang:58
    type : rvalue null
    declRef : 
    name : "aout"
    originalExpr : null
}
VarDecl:109 {
    astNodeType : VarDecl
    loc : SourceLoc(1344944) tests/autodiff/getter-setter.slang:65
    modifiers :  { 
    }
    parentDecl : ScopeDecl:89
    nameAndLoc : NameLoc{"a", SourceLoc(1344944) tests/autodiff/getter-setter.slang:65 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:134,
        null
    }
    initExpr : InitializerListExpr:135
    val : null
}
VarDecl:110 {
    astNodeType : VarDecl
    loc : SourceLoc(1344970) tests/autodiff/getter-setter.slang:66
    modifiers :  { 
    }
    parentDecl : ScopeDecl:89
    nameAndLoc : NameLoc{"b", SourceLoc(1344970) tests/autodiff/getter-setter.slang:66 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:136,
        null
    }
    initExpr : InitializerListExpr:137
    val : null
}
VarDecl:111 {
    astNodeType : VarDecl
    loc : SourceLoc(1344991) tests/autodiff/getter-setter.slang:67
    modifiers :  { 
    }
    parentDecl : ScopeDecl:89
    nameAndLoc : NameLoc{"bb", SourceLoc(1344991) tests/autodiff/getter-setter.slang:67 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:138,
        null
    }
    initExpr : null
    val : null
}
VarDecl:112 {
    astNodeType : VarDecl
    loc : SourceLoc(1345008) tests/autodiff/getter-setter.slang:69
    modifiers :  { 
    }
    parentDecl : ScopeDecl:89
    nameAndLoc : NameLoc{"dpa", SourceLoc(1345008) tests/autodiff/getter-setter.slang:69 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:139,
        null
    }
    initExpr : InvokeExpr:140
    val : null
}
DeclStmt:113 {
    astNodeType : DeclStmt
    loc : SourceLoc(1344942) tests/autodiff/getter-setter.slang:65
    modifiers :  { 
    }
    decl : VarDecl:109
}
DeclStmt:114 {
    astNodeType : DeclStmt
    loc : SourceLoc(1344968) tests/autodiff/getter-setter.slang:66
    modifiers :  { 
    }
    decl : VarDecl:110
}
DeclStmt:115 {
    astNodeType : DeclStmt
    loc : SourceLoc(1344989) tests/autodiff/getter-setter.slang:67
    modifiers :  { 
    }
    decl : VarDecl:111
}
DeclStmt:116 {
    astNodeType : DeclStmt
    loc : SourceLoc(1345004) tests/autodiff/getter-setter.slang:69
    modifiers :  { 
    }
    decl : VarDecl:112
}
ExpressionStmt:117 {
    astNodeType : ExpressionStmt
    loc : SourceLoc(1345034) tests/autodiff/getter-setter.slang:71
    modifiers :  { 
    }
    expression : AssignExpr:141
}
VarExpr:118 {
    astNodeType : VarExpr
    loc : SourceLoc(1344100) tests/autodiff/getter-setter.slang:15
    type : rvalue null
    declRef : 
    name : "z"
    originalExpr : null
}
FloatingPointLiteralExpr:119 {
    astNodeType : FloatingPointLiteralExpr
    loc : SourceLoc(1344104) tests/autodiff/getter-setter.slang:15
    type : rvalue null
    token :  { floating-point literal, SourceLoc(1344104) tests/autodiff/getter-setter.slang:15, "1.0f" }
    suffixType : float
    value : 1.0
}
VarExpr:120 {
    astNodeType : VarExpr
    loc : SourceLoc(1344314) tests/autodiff/getter-setter.slang:30
    type : rvalue null
    declRef : 
    name : "B"
    originalExpr : null
}
InitializerListExpr:121 {
    astNodeType : InitializerListExpr
    loc : SourceLoc(1344320) tests/autodiff/getter-setter.slang:30
    type : rvalue null
    args :  { 
        FloatingPointLiteralExpr:142
    }
}
VarExpr:122 {
    astNodeType : VarExpr
    loc : SourceLoc(1344342) tests/autodiff/getter-setter.slang:31
    type : rvalue null
    declRef : 
    name : "b"
    originalExpr : null
}
VarExpr:123 {
    astNodeType : VarExpr
    loc : SourceLoc(1344458) tests/autodiff/getter-setter.slang:37
    type : rvalue null
    declRef : 
    name : "B"
    originalExpr : null
}
InitializerListExpr:124 {
    astNodeType : InitializerListExpr
    loc : SourceLoc(1344464) tests/autodiff/getter-setter.slang:37
    type : rvalue null
    args :  { 
        InfixExpr:143
    }
}
VarExpr:125 {
    astNodeType : VarExpr
    loc : SourceLoc(1344492) tests/autodiff/getter-setter.slang:38
    type : rvalue null
    declRef : 
    name : "o"
    originalExpr : null
}
DirectDeclRef:126 {
    astNodeType : DirectDeclRef
    m_operands :  { 
        GenericTypeParamDecl:53
    }
}
VarDecl:127 {
    astNodeType : VarDecl
    loc : SourceLoc(1344622) tests/autodiff/getter-setter.slang:44
    modifiers :  { 
    }
    parentDecl : ScopeDecl:103
    nameAndLoc : NameLoc{"o", SourceLoc(1344622) tests/autodiff/getter-setter.slang:44 }
    inferredCapabilityRequirements : capability_set()
    markup : null
    checkState : DeclCheckStateExt{0, 0}
    nextInContainerWithSameName : null
    type :  { 
        VarExpr:144,
        null
    }
    initExpr : InitializerListExpr:145
    val : null
}
DeclStmt:128 {
    astNodeType : DeclStmt
    loc : SourceLoc(1344620) tests/autodiff/getter-setter.slang:44
    modifiers :  { 
    }
    decl : VarDecl:127
}
ReturnStmt:129 {
    astNodeType : ReturnStmt
    loc : SourceLoc(1344667) tests/autodiff/getter-setter.slang:45
    modifiers :  { 
    }
    expression : VarExpr:146
}
MemberExpr:130 {
    astNodeType : MemberExpr
    loc : SourceLoc(1344777) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    declRef : 
    name : "y"
    originalExpr : null
    baseExpression : VarExpr:147
    memberOperatorLoc : SourceLoc(1344776) tests/autodiff/getter-setter.slang:55
}
InvokeExpr:131 {
    astNodeType : InvokeExpr
    loc : SourceLoc(1344787) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    arguments :  { 
        InfixExpr:148
    }
    functionExpr : VarExpr:149
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
        SourceLoc(1344787) tests/autodiff/getter-setter.slang:55,
        SourceLoc(1344795) tests/autodiff/getter-setter.slang:55
    }
}
MemberExpr:132 {
    astNodeType : MemberExpr
    loc : SourceLoc(1344807) tests/autodiff/getter-setter.slang:56
    type : rvalue null
    declRef : 
    name : "x"
    originalExpr : null
    baseExpression : VarExpr:150
    memberOperatorLoc : SourceLoc(1344806) tests/autodiff/getter-setter.slang:56
}
InfixExpr:133 {
    astNodeType : InfixExpr
    loc : SourceLoc(1344813) tests/autodiff/getter-setter.slang:56
    type : rvalue null
    arguments :  { 
        IntegerLiteralExpr:151,
        MemberExpr:152
    }
    functionExpr : VarExpr:153
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
    }
}
VarExpr:134 {
    astNodeType : VarExpr
    loc : SourceLoc(1344942) tests/autodiff/getter-setter.slang:65
    type : rvalue null
    declRef : 
    name : "A"
    originalExpr : null
}
InitializerListExpr:135 {
    astNodeType : InitializerListExpr
    loc : SourceLoc(1344948) tests/autodiff/getter-setter.slang:65
    type : rvalue null
    args :  { 
        FloatingPointLiteralExpr:154,
        FloatingPointLiteralExpr:155
    }
}
VarExpr:136 {
    astNodeType : VarExpr
    loc : SourceLoc(1344968) tests/autodiff/getter-setter.slang:66
    type : rvalue null
    declRef : 
    name : "B"
    originalExpr : null
}
InitializerListExpr:137 {
    astNodeType : InitializerListExpr
    loc : SourceLoc(1344974) tests/autodiff/getter-setter.slang:66
    type : rvalue null
    args :  { 
        FloatingPointLiteralExpr:156
    }
}
VarExpr:138 {
    astNodeType : VarExpr
    loc : SourceLoc(1344989) tests/autodiff/getter-setter.slang:67
    type : rvalue null
    declRef : 
    name : "B"
    originalExpr : null
}
VarExpr:139 {
    astNodeType : VarExpr
    loc : SourceLoc(1345004) tests/autodiff/getter-setter.slang:69
    type : rvalue null
    declRef : 
    name : "dpA"
    originalExpr : null
}
InvokeExpr:140 {
    astNodeType : InvokeExpr
    loc : SourceLoc(1345017) tests/autodiff/getter-setter.slang:69
    type : rvalue null
    arguments :  { 
        VarExpr:157,
        VarExpr:158
    }
    functionExpr : VarExpr:159
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
        SourceLoc(1345017) tests/autodiff/getter-setter.slang:69,
        SourceLoc(1345019) tests/autodiff/getter-setter.slang:69,
        SourceLoc(1345022) tests/autodiff/getter-setter.slang:69
    }
}
AssignExpr:141 {
    astNodeType : AssignExpr
    loc : SourceLoc(1345050) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    left : IndexExpr:160
    right : MemberExpr:161
}
FloatingPointLiteralExpr:142 {
    astNodeType : FloatingPointLiteralExpr
    loc : SourceLoc(1344321) tests/autodiff/getter-setter.slang:30
    type : rvalue null
    token :  { floating-point literal, SourceLoc(1344321) tests/autodiff/getter-setter.slang:30, "0.0" }
    suffixType : float
    value : 0.0
}
InfixExpr:143 {
    astNodeType : InfixExpr
    loc : SourceLoc(1344469) tests/autodiff/getter-setter.slang:37
    type : rvalue null
    arguments :  { 
        MemberExpr:162,
        MemberExpr:163
    }
    functionExpr : VarExpr:164
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
    }
}
VarExpr:144 {
    astNodeType : VarExpr
    loc : SourceLoc(1344620) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    declRef : 
    name : "B"
    originalExpr : null
}
InitializerListExpr:145 {
    astNodeType : InitializerListExpr
    loc : SourceLoc(1344626) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    args :  { 
        InfixExpr:165
    }
}
VarExpr:146 {
    astNodeType : VarExpr
    loc : SourceLoc(1344674) tests/autodiff/getter-setter.slang:45
    type : rvalue null
    declRef : 
    name : "o"
    originalExpr : null
}
VarExpr:147 {
    astNodeType : VarExpr
    loc : SourceLoc(1344772) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    declRef : 
    name : "aout"
    originalExpr : null
}
InfixExpr:148 {
    astNodeType : InfixExpr
    loc : SourceLoc(1344790) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    arguments :  { 
        IntegerLiteralExpr:166,
        MemberExpr:167
    }
    functionExpr : VarExpr:168
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
    }
}
VarExpr:149 {
    astNodeType : VarExpr
    loc : SourceLoc(1344781) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    declRef : 
    name : "detach"
    originalExpr : null
}
VarExpr:150 {
    astNodeType : VarExpr
    loc : SourceLoc(1344802) tests/autodiff/getter-setter.slang:56
    type : rvalue null
    declRef : 
    name : "aout"
    originalExpr : null
}
IntegerLiteralExpr:151 {
    astNodeType : IntegerLiteralExpr
    loc : SourceLoc(1344811) tests/autodiff/getter-setter.slang:56
    type : rvalue null
    token :  { integer literal, SourceLoc(1344811) tests/autodiff/getter-setter.slang:56, "5" }
    suffixType : int
    value : 5
}
MemberExpr:152 {
    astNodeType : MemberExpr
    loc : SourceLoc(1344817) tests/autodiff/getter-setter.slang:56
    type : rvalue null
    declRef : 
    name : "x"
    originalExpr : null
    baseExpression : VarExpr:169
    memberOperatorLoc : SourceLoc(1344816) tests/autodiff/getter-setter.slang:56
}
VarExpr:153 {
    astNodeType : VarExpr
    loc : SourceLoc(1344813) tests/autodiff/getter-setter.slang:56
    type : rvalue null
    declRef : 
    name : "*"
    originalExpr : null
}
FloatingPointLiteralExpr:154 {
    astNodeType : FloatingPointLiteralExpr
    loc : SourceLoc(1344949) tests/autodiff/getter-setter.slang:65
    type : rvalue null
    token :  { floating-point literal, SourceLoc(1344949) tests/autodiff/getter-setter.slang:65, "1.0" }
    suffixType : float
    value : 1.0
}
FloatingPointLiteralExpr:155 {
    astNodeType : FloatingPointLiteralExpr
    loc : SourceLoc(1344954) tests/autodiff/getter-setter.slang:65
    type : rvalue null
    token :  { floating-point literal, SourceLoc(1344954) tests/autodiff/getter-setter.slang:65, "2.0" }
    suffixType : float
    value : 2.0
}
FloatingPointLiteralExpr:156 {
    astNodeType : FloatingPointLiteralExpr
    loc : SourceLoc(1344975) tests/autodiff/getter-setter.slang:66
    type : rvalue null
    token :  { floating-point literal, SourceLoc(1344975) tests/autodiff/getter-setter.slang:66, "0.2" }
    suffixType : float
    value : 0.20000000000000001
}
VarExpr:157 {
    astNodeType : VarExpr
    loc : SourceLoc(1345018) tests/autodiff/getter-setter.slang:69
    type : rvalue null
    declRef : 
    name : "a"
    originalExpr : null
}
VarExpr:158 {
    astNodeType : VarExpr
    loc : SourceLoc(1345021) tests/autodiff/getter-setter.slang:69
    type : rvalue null
    declRef : 
    name : "b"
    originalExpr : null
}
VarExpr:159 {
    astNodeType : VarExpr
    loc : SourceLoc(1345014) tests/autodiff/getter-setter.slang:69
    type : rvalue null
    declRef : 
    name : "dpA"
    originalExpr : null
}
IndexExpr:160 {
    astNodeType : IndexExpr
    loc : SourceLoc(1345046) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    baseExpression : VarExpr:170
    indexExprs :  { 
        IntegerLiteralExpr:171
    }
    argumentDelimeterLocs :  { 
        SourceLoc(1345046) tests/autodiff/getter-setter.slang:71,
        SourceLoc(1345048) tests/autodiff/getter-setter.slang:71
    }
}
MemberExpr:161 {
    astNodeType : MemberExpr
    loc : SourceLoc(1345073) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    declRef : 
    name : "z"
    originalExpr : null
    baseExpression : MemberExpr:172
    memberOperatorLoc : SourceLoc(1345072) tests/autodiff/getter-setter.slang:71
}
MemberExpr:162 {
    astNodeType : MemberExpr
    loc : SourceLoc(1344467) tests/autodiff/getter-setter.slang:37
    type : rvalue null
    declRef : 
    name : "z"
    originalExpr : null
    baseExpression : VarExpr:173
    memberOperatorLoc : SourceLoc(1344466) tests/autodiff/getter-setter.slang:37
}
MemberExpr:163 {
    astNodeType : MemberExpr
    loc : SourceLoc(1344473) tests/autodiff/getter-setter.slang:37
    type : rvalue null
    declRef : 
    name : "z"
    originalExpr : null
    baseExpression : VarExpr:174
    memberOperatorLoc : SourceLoc(1344472) tests/autodiff/getter-setter.slang:37
}
VarExpr:164 {
    astNodeType : VarExpr
    loc : SourceLoc(1344469) tests/autodiff/getter-setter.slang:37
    type : rvalue null
    declRef : 
    name : "+"
    originalExpr : null
}
InfixExpr:165 {
    astNodeType : InfixExpr
    loc : SourceLoc(1344651) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    arguments :  { 
        InvokeExpr:175,
        MemberExpr:176
    }
    functionExpr : VarExpr:177
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
    }
}
IntegerLiteralExpr:166 {
    astNodeType : IntegerLiteralExpr
    loc : SourceLoc(1344788) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    token :  { integer literal, SourceLoc(1344788) tests/autodiff/getter-setter.slang:55, "2" }
    suffixType : int
    value : 2
}
MemberExpr:167 {
    astNodeType : MemberExpr
    loc : SourceLoc(1344794) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    declRef : 
    name : "x"
    originalExpr : null
    baseExpression : VarExpr:178
    memberOperatorLoc : SourceLoc(1344793) tests/autodiff/getter-setter.slang:55
}
VarExpr:168 {
    astNodeType : VarExpr
    loc : SourceLoc(1344790) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    declRef : 
    name : "*"
    originalExpr : null
}
VarExpr:169 {
    astNodeType : VarExpr
    loc : SourceLoc(1344815) tests/autodiff/getter-setter.slang:56
    type : rvalue null
    declRef : 
    name : "a"
    originalExpr : null
}
VarExpr:170 {
    astNodeType : VarExpr
    loc : SourceLoc(1345034) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    declRef : 
    name : "outputBuffer"
    originalExpr : null
}
IntegerLiteralExpr:171 {
    astNodeType : IntegerLiteralExpr
    loc : SourceLoc(1345047) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    token :  { integer literal, SourceLoc(1345047) tests/autodiff/getter-setter.slang:71, "0" }
    suffixType : int
    value : 0
}
MemberExpr:172 {
    astNodeType : MemberExpr
    loc : SourceLoc(1345071) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    declRef : 
    name : "d"
    originalExpr : null
    baseExpression : InvokeExpr:179
    memberOperatorLoc : SourceLoc(1345070) tests/autodiff/getter-setter.slang:71
}
VarExpr:173 {
    astNodeType : VarExpr
    loc : SourceLoc(1344465) tests/autodiff/getter-setter.slang:37
    type : rvalue null
    declRef : 
    name : "a"
    originalExpr : null
}
VarExpr:174 {
    astNodeType : VarExpr
    loc : SourceLoc(1344471) tests/autodiff/getter-setter.slang:37
    type : rvalue null
    declRef : 
    name : "b"
    originalExpr : null
}
InvokeExpr:175 {
    astNodeType : InvokeExpr
    loc : SourceLoc(1344647) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    arguments :  { 
        VarExpr:180
    }
    functionExpr : GenericAppExpr:181
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
        SourceLoc(1344647) tests/autodiff/getter-setter.slang:44,
        SourceLoc(1344649) tests/autodiff/getter-setter.slang:44
    }
}
MemberExpr:176 {
    astNodeType : MemberExpr
    loc : SourceLoc(1344655) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    declRef : 
    name : "z"
    originalExpr : null
    baseExpression : VarExpr:182
    memberOperatorLoc : SourceLoc(1344654) tests/autodiff/getter-setter.slang:44
}
VarExpr:177 {
    astNodeType : VarExpr
    loc : SourceLoc(1344651) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    declRef : 
    name : "*"
    originalExpr : null
}
VarExpr:178 {
    astNodeType : VarExpr
    loc : SourceLoc(1344792) tests/autodiff/getter-setter.slang:55
    type : rvalue null
    declRef : 
    name : "a"
    originalExpr : null
}
InvokeExpr:179 {
    astNodeType : InvokeExpr
    loc : SourceLoc(1345065) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    arguments :  { 
        VarExpr:183
    }
    functionExpr : ForwardDifferentiateExpr:184
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
        SourceLoc(1345065) tests/autodiff/getter-setter.slang:71,
        SourceLoc(1345069) tests/autodiff/getter-setter.slang:71
    }
}
VarExpr:180 {
    astNodeType : VarExpr
    loc : SourceLoc(1344648) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    declRef : 
    name : "a"
    originalExpr : null
}
GenericAppExpr:181 {
    astNodeType : GenericAppExpr
    loc : SourceLoc(1344627) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    arguments :  { 
        VarExpr:185,
        VarExpr:186
    }
    functionExpr : VarExpr:187
    originalFunctionExpr : null
    argumentDelimeterLocs :  { 
    }
}
VarExpr:182 {
    astNodeType : VarExpr
    loc : SourceLoc(1344653) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    declRef : 
    name : "b"
    originalExpr : null
}
VarExpr:183 {
    astNodeType : VarExpr
    loc : SourceLoc(1345066) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    declRef : 
    name : "dpa"
    originalExpr : null
}
ForwardDifferentiateExpr:184 {
    astNodeType : ForwardDifferentiateExpr
    loc : SourceLoc(1345052) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    baseFunction : VarExpr:188
    newParameterNames :  { 
    }
}
VarExpr:185 {
    astNodeType : VarExpr
    loc : SourceLoc(1344638) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    declRef : 
    name : "float"
    originalExpr : null
}
VarExpr:186 {
    astNodeType : VarExpr
    loc : SourceLoc(1344645) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    declRef : 
    name : "T"
    originalExpr : null
}
VarExpr:187 {
    astNodeType : VarExpr
    loc : SourceLoc(1344627) tests/autodiff/getter-setter.slang:44
    type : rvalue null
    declRef : 
    name : "__realCast"
    originalExpr : null
}
VarExpr:188 {
    astNodeType : VarExpr
    loc : SourceLoc(1345063) tests/autodiff/getter-setter.slang:71
    type : rvalue null
    declRef : 
    name : "f"
    originalExpr : null
}
