name: Check User Guide Redirects (comment /fix-redirects to auto-fix)

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  check-redirects:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Check user guide redirects
        id: check
        run: |
          #!/bin/bash
          set -e

          # Load shared redirect configuration
          source .github/workflows/redirect-config.sh

          echo "Checking redirect_to links in ${READTHEDOCS_USER_GUIDE_PATH}..."

          failed=false

          # Find all .md files recursively in the user guide directory
          # Use process substitution to avoid subshell issues in returning the failure state
          while read -r file; do
            if [ ! -f "$file" ]; then
              continue
            fi

            echo "Checking $file..."

            # Expected URL pattern (dynamically construct from file path)
            # Replace .md with .html and prepend the base URL components
            file_path_no_ext=${file%.md}
            expected_url="${READTHEDOCS_DOMAIN}${READTHEDOCS_VERSION}${READTHEDOCS_USER_GUIDE_PREFIX}${file_path_no_ext}.html"

            # Extract redirect_to line
            redirect_line=$(grep "^redirect_to:" "$file" || true)

            if [ -z "$redirect_line" ]; then
              echo "Missing redirect_to in $file"
              echo "    Expected: $expected_url"
              failed=true
              continue
            fi

            # Extract the URL from redirect_to line (strip CRLF if present)
            redirect_url=$(echo "$redirect_line" | sed 's/redirect_to: *//' | tr -d '\r')

            if [ "$redirect_url" != "$expected_url" ]; then
              echo "Incorrect redirect_to in $file"
              echo "    Found:    $redirect_url"
              echo "    Expected: $expected_url"
              failed=true
            fi
          done < <(find "${READTHEDOCS_USER_GUIDE_PATH}" -name "*.md" -type f)

          # Check if any failures occurred
          if [ "$failed" = true ]; then
            echo ""
            echo "Some user guide files have missing or incorrect redirect_to links."
            echo "Please add/fix the redirect_to links or comment '/fix-redirects' on your PR."
            exit 1
          fi
